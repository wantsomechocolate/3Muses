


Main Page
	Add real text to the landing page
	Update background image to a relevant photo
	Ask mom about a powered by modal


Footer
	Figure out what else can go in the footer
	Populate footer with real text

Category page
	Has Judy approval for now. 
	When there are no more items of a given type, the images in the category footer fucking collapse GODAMMET WHEKJSDKFJALSDKFJA

Display Page
	Fine for now - consider adding header to category section

Product Page
	Add button to proceed to cart once the user has an item in their cart

Cart Page
	Proceeding to Checkout

Checkout page 
	Make sure that Bitcoin works in test mode. Have to check what goes in DB, confirmation email, and view_purchase_history

	Bitcoin payment method is not working.



Confirmation page
	Add session variable that expires the confirmation page


Payments

	Paypal

		Cancelling payment

			Add functionality to handle someone cancelling a paypal payment. ("I'm thinking I just bring them back to the cart page") - yes this is fine for now. I checked and it does go to the cart page - I'll add a message, should be easy because paypal sends users back with a token. So for now I'll just check if there is a var named token and flash something that says you cancelled your payment on paypal - or I can just add something at the top of the page?




Login Page


View Purchase History Page

	I'm thinking that the user can click on a link to see specific stripe, shipping, paypal information that opens up a modal. 


Profile Page
	Test ability to edit profile info for users that register normally and users that signed up after purchase. 






Checkout Flow

When session expires on the confirmation screen a refresh causes an error, because the session variable for the allowable confirmation page is gone. fix?

Add a potential error message for each stage of the pay_stripe function.



Registering at the end of purchase






Random Problems
Weird error that caused cart db rows with no associated user to put "in-cart" ribbons on products for non-users?
It would say it was in the cart, the button to add/remove said remove, but clicking on the cart page didn't let the user in because they weren't a guest yet. 




Tests

Homepage (This includes the nav bar)
View
View as Guest
View as User
View as Admin

Categories Page
Invoke Carousel
Click on products
View "IN CART" for users and guests
Click on categories

Product Page
Invoke Carousel
Add item
View "IN CART" for users and guests
Remove item

Cart Page
Back to shopping button
Delete Cart item
Add address
delete address
edit address
choose shipping option

Checkout page
checkout with stripe card
checkout with stripe bitcoin
checkout with paypal






Purchase History

Add shipping service raw name and the payment email (I mean, I can get that from the api, but I think I should just save it)

Change javascript so that it takes the delivery date and just puts where it goes, no error checking or formatting with js. If a delivery date can't be found server side, it will supply an N/A to put there instead. If N/A is not desireable, it can be replaced later, or a tooltip can be added to it. 



Mobile Specific
Flash message on mobile, Change css so that flash message hugs right side of screen on mobile. Also, try setting max width equal to the screen viewport.

Swipe to navigate carousel isn't working. 

Make sure that other javascript is working on mobile (placeholder text; for blanking, etc)



Confirmation Email

Needs revamping. Add purchase id, take away the weight info, match color scheme










<!-- Another set of buttons to put at bottom of page -->
<div class="container-fluid style1">
	<div class='container'>

		<div class="row checkout-row">
			<div class="col-md-offset-2 col-md-8 checkout-summary-payment-button-line checkout-summary-payment-button-line-stripe">
				<form enctype="multipart/form-data" action="{{=URL('pay_stripe')}}" method="post">
				  {{ import os }}
				  <script
				    src="https://checkout.stripe.com/checkout.js" class="stripe-button"
				    data-key="{{=os.environ['STRIPE_PUBLISHABLE']}}"
				    data-amount="{{ =int(session.summary_information['information_LOD'][0]['total_cost_USD']*100) }}"
				    data-name="ThreeMusesGlass"
				    data-description="Purchase Details from ThreeMusesGlass"
				    data-bitcoin="true"
				    data-label="Check out with Stripe"
				    data-panel-label="Pay"
				    data-zip-code='true'
				    data-image="http://images.clipartpanda.com/smiley-face-png-1407-smiley-face.png">
				  </script>
				</form>
			</div>
		</div>

		<div class="row checkout-row">
			<div class="col-md-offset-2 col-md-8 checkout-summary-payment-button-line checkout-summary-paypal-button-line">
				<a class="checkout-view-payment-btn checkout-view-paypal-btn" href="{{=payment_information['information_LOD'][0]['paypal_approval_url']}}" target="_blank">
					<div>
						<img src="https://www.paypalobjects.com/webstatic/en_US/i/buttons/checkout-logo-large.png" alt="Check out with PayPal" />
					</div>
				</a>
			</div>
		</div>

	</div> <!-- close container -->
</div> <!-- close fluid container -->


easy way
				<!-- 				
				<form enctype="multipart/form-data" action="{{=URL('pay_stripe')}}" method="post">
				  {{ import os }}
				  <script
				    src="https://checkout.stripe.com/checkout.js" class="stripe-button"
				    data-key="{{=os.environ['STRIPE_PUBLISHABLE']}}"
				    data-amount="{{ =int(session.summary_information['information_LOD'][0]['total_cost_USD']*100) }}"
				    data-name="ThreeMusesGlass"
				    data-description="Purchase Details from ThreeMusesGlass"
				    data-bitcoin="true"
				    data-label="Check out with Stripe"
				    data-panel-label="Pay"
				    data-zip-code='true'
				    data-image="http://images.clipartpanda.com/smiley-face-png-1407-smiley-face.png">
				  </script>
				</form> 
				-->

harder way

<!--
<script src="https://checkout.stripe.com/checkout.js"></script>

<button id="customButton">Purchase</button>

<script type="text/javascript">

  var handler = StripeCheckout.configure({
    key: 'pk_test_pDkBiVWtEb6hIErKE13J9Ohr',
    // image: '/img/documentation/checkout/marketplace.png',
    token: function(token) {
      // Use the token to create the charge with a server-side script.
      // You can access the token ID with `token.id`
    }
  });

  $('#customButton').on('click', function(e) {
    // Open Checkout with further options
    handler.open({
      name: '3MusesGlass',
      description: '2 widgets',
      zipCode: true,
      amount: 2000
    });
    e.preventDefault();
  });

  // Close Checkout on page navigation
  $(window).on('popstate', function() {
    handler.close();
  });
</script>
-->